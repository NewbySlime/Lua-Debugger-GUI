# USER DATA

OUTPUT_FILE= unit_test.exe

OPTIONAL_DELETE_FILE= "../../godot_workspace/bin/*release*.dll" "../../godot_workspace/bin/*release*.lib"
OPTIONAL_DEBUG_DELETE_FILE= "../../godot_workspace/bin/*debug*.dll" "../../godot_workspace/bin/*debug*.lib"


DLL_OUTPUT_FILE= ../../godot_workspace/bin/CPPAPI.dll
STATIC_DLIB_OUTPUT_FILE = ../../godot_workspace/bin/CPPAPI_static.lib
UNIT_TEST_MEMTRACKER_OUTPUT_FILE= memtracker.dll
UNIT_TEST_OUTPUT_FILE= unit_test.exe

CLUA_SOURCE_FOLDER= ./LuaSrc/*.c
CPPLIB_SOURCE_FOLDER= ./Src/*.cpp

UNIT_TEST_MEMTRACKER_SOURCE_FOLDER= ./TestSrc/memtracker/*.cpp
UNIT_TEST_SOURCE_FOLDER= ./TestSrc/unit_test/*.cpp

# END OF USER DATA


AS_DEBUG=FALSE

COMPILER_TYPE=mingw


COMPILE_COMMAND=
MINGW_COMPILE_COMMAND=g++
MSVC_COMPILE_COMMAND=cl

LINK_COMMAND=
MINGW_LINK_COMMAND=g++
MSVC_LINK_COMMAND=link

COMBINING_LINK_COMMAND=
MINGW_COMBINING_LINK_COMMAND=ld
MSVC_COMBINING_LINK_COMMAND=lib


OUTPUT_TARGET_OPTION=
MINGW_OUTPUT_TARGET_OPTIONS= -o 
MSVC_OUTPUT_TARGET_OPTIONS= -OUT:

COMBINING_OUTPUT_TARGET_OPTION=
MINGW_COMBINING_OUTPUT_TARGET_OPTIONS= -o 
MSVC_COMBINING_OUTPUT_TARGET_OPTIONS= -OUT:


COMPILE_OPTION=
MINGW_COMPILE_OPTIONS= -c -std=c++17
MSVC_COMPILE_OPTIONS= -c -std:c++17 -EHsc -TP

USING_LUA_API_OPTION=
MIGNW_USING_LUA_API_OPTIONS= -DUSING_LUA_API
MSVC_USING_LUA_API_OPTIONS= -DUSING_LUA_API

INCLUDE_LUA_OPTION=
MINGW_INCLUDE_LUA_OPTIONS= -DLUA_CODE_EXISTS
MSVC_INCLUDE_LUA_OPTIONS= -DLUA_CODE_EXISTS

USING_MEMDYNAMIC_MANAGEMENT_OPTION=
MINGW_USING_MEMDYNAMIC_MANAGEMENT_OPTIONS= -DUSING_MEMDYNAMIC_MANAGEMENT
MSVC_USING_MEMDYNAMIC_MANAGEMENT_OPTIONS= -DUSING_MEMDYNAMIC_MANAGEMENT


LINK_OPTION=
MINGW_LINK_OPTIONS=
MSVC_LINK_OPTIONS=

LINK_DLL_OPTION=
MINGW_LINK_DLL_OPTIONS= -shared
MSVC_LINK_DLL_OPTIONS= -DLL

COMBINE_LINK_OPTION= 
MINGW_COMBINE_LINK_OPTIONS= -r
MSVC_COMBINE_LINK_OPTIONS= 

DEBUG_COMPILE_OPTION=
MINGW_DEBUG_COMPILE_OPTIONS= -g -O0 -ggdb -DDEBUG_BUILD
MSVC_DEBUG_COMPILE_OPTIONS= -Od -Z7 -DDEBUG_BUILD -MT

DEBUG_LINK_OPTION=
MINGW_DEBUG_LINK_OPTIONS=
MSVC_DEBUG_LINK_OPTIONS= -DEBUG


COMPILED_OBJECT_EXT=
MINGW_COMPILED_OBJECT_EXT=.o
MSVC_COMPILED_OBJECT_EXT=.obj

DEL_DEL_COMMAND=DEL
RM_DEL_COMMAND=rm -f
DEFAULT_DEL_COMMAND=$(RM_DEL_COMMAND)


# MARK: Fn cmp_str
# Arg 1: String 1
# Arg 2: String 2
cmp_str=$(findstring $(1),$(2))


# MARK: Fn update_compiler_data
define update_compiler_data
$(if $(call cmp_str,$(COMPILER_TYPE),mingw),
	$(eval COMPILE_COMMAND=$(MINGW_COMPILE_COMMAND))
	$(eval COMPILE_OPTION=$(MINGW_COMPILE_OPTIONS))

	$(eval USING_LUA_API_OPTION=$(MIGNW_USING_LUA_API_OPTIONS))
	$(eval USING_MEMDYNAMIC_MANAGEMENT_OPTION=$(MINGW_USING_MEMDYNAMIC_MANAGEMENT_OPTIONS))

	$(eval LINK_COMMAND=$(MINGW_LINK_COMMAND))
	$(eval LINK_OPTION=$(MINGW_LINK_OPTIONS))

	$(eval COMBINING_LINK_COMMAND=$(MINGW_COMBINING_LINK_COMMAND))
	$(eval COMBINE_LINK_OPTION=$(MINGW_COMBINE_LINK_OPTIONS))

	$(eval OUTPUT_TARGET_OPTION=$(MINGW_OUTPUT_TARGET_OPTIONS))
	$(eval COMPILED_OBJECT_EXT=$(MINGW_COMPILED_OBJECT_EXT))
	$(eval COMBINING_OUTPUT_TARGET_OPTION=$(MINGW_COMBINING_OUTPUT_TARGET_OPTIONS))
)

$(if $(call cmp_str,$(COMPILER_TYPE),msvc),
	$(eval COMPILE_COMMAND=$(MSVC_COMPILE_COMMAND))
	$(eval COMPILE_OPTION=$(MSVC_COMPILE_OPTIONS))

	$(eval USING_LUA_API_OPTION=$(MSVC_USING_LUA_API_OPTIONS))
	$(eval USING_MEMDYNAMIC_MANAGEMENT_OPTION=$(MSVC_USING_MEMDYNAMIC_MANAGEMENT_OPTIONS))

	$(eval LINK_COMMAND=$(MSVC_LINK_COMMAND))
	$(eval LINK_OPTION=$(MSVC_LINK_OPTIONS))

	$(eval COMBINING_LINK_COMMAND=$(MSVC_COMBINING_LINK_COMMAND))
	$(eval COMBINE_LINK_OPTION=$(MSVC_COMBINE_LINK_OPTIONS))

	$(eval COMPILED_OBJECT_EXT=$(MSVC_COMPILED_OBJECT_EXT))
	$(eval OUTPUT_TARGET_OPTION=$(MSVC_OUTPUT_TARGET_OPTIONS))
	$(eval COMBINING_OUTPUT_TARGET_OPTION=$(MSVC_COMBINING_OUTPUT_TARGET_OPTIONS))
)
endef


# MARK: Fn update_debug_flag
define update_debug_flag
$(if $(call cmp_str,$(COMPILER_TYPE),mingw),
	$(eval DEBUG_COMPILE_OPTION=$(MINGW_DEBUG_COMPILE_OPTIONS))
	$(eval DEBUG_LINK_OPTION=$(MINGW_DEBUG_LINK_OPTIONS))
)

$(if $(call cmp_str,$(COMPILER_TYPE),msvc),
	$(eval DEBUG_COMPILE_OPTION=$(MSVC_DEBUG_COMPILE_OPTIONS))
	$(eval DEBUG_LINK_OPTION=$(MSVC_DEBUG_LINK_OPTIONS))
)
endef


# MARK: Fn update_dll_flag
define update_dll_flag
$(if $(call cmp_str,$(COMPILER_TYPE),mingw),
	$(eval LINK_DLL_OPTION=$(MINGW_LINK_DLL_OPTIONS))
	$(eval INCLUDE_LUA_OPTION=$(MINGW_INCLUDE_LUA_OPTIONS))
)

$(if $(call cmp_str,$(COMPILER_TYPE),msvc),
	$(eval LINK_DLL_OPTION=$(MSVC_LINK_DLL_OPTIONS))
	$(eval INCLUDE_LUA_OPTION=$(MSVC_INCLUDE_LUA_OPTIONS))
)
endef


# MARK: Fn check_debug_flag
define check_debug_flag
$(if $(call cmp_str,$(AS_DEBUG),TRUE),
	$(call update_debug_flag)
)
endef


# MARK: Fn delete_objects
# Arg 1: File to delete
define delete_objects
	$(DEFAULT_DEL_COMMAND) $(1)
endef


# MARK: Fn compile_script
# Arg 1: Script to compile
# Arg 2: Additional option
define compile_script
	$(COMPILE_COMMAND) $(COMPILE_OPTION) $(1) $(DEBUG_COMPILE_OPTION) $(2)
endef


# MARK: Fn link_compilation
# Arg 1: Target compilation file
# Arg 2: Output path
# Arg 3: Additional flag
define link_compilation
	$(LINK_COMMAND) $(LINK_OPTION) $(1) $(OUTPUT_TARGET_OPTION)$(2) $(DEBUG_LINK_OPTION) $(3)
endef


# MARK: Fn combine_compilation
# Arg 1: Target compilation file
# Arg 2: Output path
define combine_compilation
	$(COMBINING_LINK_COMMAND) $(COMBINE_LINK_OPTION) $(1) $(COMBINING_OUTPUT_TARGET_OPTION)$(2)
endef



define _compile_as_dll
	$(call compile_script,$(CPPLIB_SOURCE_FOLDER),$(USING_LUA_API_OPTION) $(USING_MEMDYNAMIC_MANAGEMENT_OPTION))
	$(call combine_compilation,*$(COMPILED_OBJECT_EXT),$(STATIC_DLIB_OUTPUT_FILE))

	$(call delete_objects,*$(COMPILED_OBJECT_EXT))

	$(call compile_script,$(CLUA_SOURCE_FOLDER))
	$(call compile_script,$(CPPLIB_SOURCE_FOLDER),$(INCLUDE_LUA_OPTION) $(USING_LUA_API_OPTION) $(USING_MEMDYNAMIC_MANAGEMENT_OPTION))

	$(call link_compilation,*$(COMPILED_OBJECT_EXT),$(DLL_OUTPUT_FILE),$(LINK_DLL_OPTION))
endef


define _delete_build_files
	$(eval _LIBRARY_DELETE_FILES=$(OPTIONAL_DELETE_FILE))
  $(if $(call cmp_str,$(AS_DEBUG),TRUE),
    $(eval _LIBRARY_DELETE_FILES=$(OPTIONAL_DEBUG_DELETE_FILE))
  )

	$(call delete_objects,*$(COMPILED_OBJECT_EXT) $(_LIBRARY_DELETE_FILES))
endef



_f_update_compiler:
	$(call update_compiler_data)
	$(call update_dll_flag)
	$(call check_debug_flag)

f_use_mingw:
	$(eval COMPILER_TYPE=mingw)

f_use_msvc:
	$(eval COMPILER_TYPE=msvc)

f_use_del:
	$(eval DEFAULT_DEL_COMMAND=$(DEL_DEL_COMMAND))

f_as_debug:
	$(eval AS_DEBUG=TRUE)




proc_compile: _f_update_compiler
	$(call _delete_build_files)
	
	$(call _compile_as_dll)

	$(call delete_objects,*$(COMPILED_OBJECT_EXT))


proc_unit_test: _f_update_compiler
	$(call delete_objects,*$(COMPILED_OBJECT_EXT))

	$(call compile_script,$(UNIT_TEST_MEMTRACKER_SOURCE_FOLDER))
	$(call link_compilation,*$(COMPILED_OBJECT_EXT),$(UNIT_TEST_MEMTRACKER_OUTPUT_FILE),$(LINK_DLL_OPTION))

	$(call delete_objects,*$(COMPILED_OBJECT_EXT))

	$(call compile_script,$(UNIT_TEST_SOURCE_FOLDER),$(USING_LUA_API_OPTION) $(USING_MEMDYNAMIC_MANAGEMENT_OPTION))
	$(call link_compilation,*$(COMPILED_OBJECT_EXT) $(STATIC_DLIB_OUTPUT_FILE),$(UNIT_TEST_OUTPUT_FILE))

	$(call delete_objects,*$(COMPILED_OBJECT_EXT))


mem_test:
	drmemory -logdir ./log -ignore_kernel -debug -dr_debug -- $(OUTPUT_FILE)
